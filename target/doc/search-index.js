var searchIndex = {};
searchIndex["maildir"] = {"doc":"","items":[[3,"MailEntry","maildir","This struct represents a single email message inside\nthe maildir. Creation of the struct does not automatically\nload the content of the email file into memory - however,\nthat may happen upon calling functions that require parsing\nthe email.",null,null],[3,"MailEntries","","An iterator over the email messages in a particular\nmaildir subfolder (either `cur` or `new`). This iterator\nproduces a `std::io::Result&lt;MailEntry&gt;`, which can be an\n`Err` if an error was encountered while trying to read\nfile system properties on a particular entry, or if an\ninvalid file was found in the maildir. Files starting with\na dot (.) character in the maildir folder are ignored.",null,null],[3,"Maildir","","The main entry point for this library. This struct can be\ninstantiated from a path using the `from` implementations.\nThe path passed in to the `from` should be the root of the\nmaildir (the folder containing `cur`, `new`, and `tmp`).",null,null],[4,"MailEntryError","","",null,null],[13,"IOError","","",0,null],[13,"ParseError","","",0,null],[13,"DateError","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"mailentryerror"}}],[11,"from","","",0,{"inputs":[{"name":"mailparseerror"}],"output":{"name":"mailentryerror"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"mailentryerror"}}],[11,"id","","",1,null],[11,"parsed","","",1,null],[11,"headers","","",1,null],[11,"received","","",1,null],[11,"flags","","",1,null],[11,"is_draft","","",1,null],[11,"is_flagged","","",1,null],[11,"is_passed","","",1,null],[11,"is_replied","","",1,null],[11,"is_seen","","",1,null],[11,"is_trashed","","",1,null],[11,"next","","",2,null],[11,"count_new","","Returns the number of messages found inside the `new`\nmaildir folder.",3,null],[11,"count_cur","","Returns the number of messages found inside the `cur`\nmaildir folder.",3,null],[11,"list_new","","Returns an iterator over the messages inside the `new`\nmaildir folder. The order of messages in the iterator\nis not specified, and is not guaranteed to be stable\nover multiple invocations of this method.",3,null],[11,"list_cur","","Returns an iterator over the messages inside the `cur`\nmaildir folder. The order of messages in the iterator\nis not specified, and is not guaranteed to be stable\nover multiple invocations of this method.",3,null],[11,"move_new_to_cur","","Moves a message from the `new` maildir folder to the\n`cur` maildir folder. The id passed in should be\nobtained from the iterator produced by `list_new`.",3,null],[11,"find","","Tries to find the message with the given id in the\nmaildir. This searches both the `new` and the `cur`\nfolders.",3,null],[11,"from","","",3,{"inputs":[{"name":"pathbuf"}],"output":{"name":"maildir"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"maildir"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"maildir"}}]],"paths":[[4,"MailEntryError"],[3,"MailEntry"],[3,"MailEntries"],[3,"Maildir"]]};
initSearch(searchIndex);
